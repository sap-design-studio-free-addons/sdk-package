
/**
 * Class for Open Street Map
 */
class org.scn.community.basics.OSMap extends Component {
	
	/**
	 * Zooms in the map
	 */
	void zoomIn() {*
		this.zoom = this.zoom + 1;
	*}
	
	/**
	 * Zooms out the map
	 */
	void zoomOut() {*
		this.zoom = this.zoom - 1;
	*}

	/**
	 * Moves the view on the map in the left direction
	 */
	void panLeft() {*
		this.panAction = this.panAction + 1; 
		this.pan = "0L00";
	*}

	/**
	 * Moves the view on the map in the right direction
	 */
	void panRight() {*
		this.panAction = this.panAction + 1; 
		this.pan = "00R0";
	*}
	
	/**
	 * Moves the view on the map in the up direction
	 */
	void panUp() {*
		this.panAction = this.panAction + 1; 
		this.pan = "U000";
	*}

	/**
	 * Moves the view on the map in the down direction
	 */
	void panDown() {*
		this.panAction = this.panAction + 1; 
		this.pan = "000D";
	*}

	/**
	 * Adds a new location. Keep in mind key should be unique.
	 * 
 	<example>
	You want to add 2 locations
	<code>
	OSMAP_1.addLocation("MADRIT", "Madrit", "", 40.4, -3.7);	<br>
	OSMAP_1.addLocation("WALLDORF", "SAP SE Headquaters", "SAP.jpg", 49.293417, 8.642384);	<br>
	</code>
	</example>
	 */
	void addLocation (
			/**Element Key (must be unique)*/String elementKey, 
			/**Element text*/String elementText, 
			/**Image URL, if not set, no image*/String imageUrl, 
			/**Latitude (horizontal)*/float latitude,
			/**Longitide (vertical)*/float longitude
		) {*		
		
		var itemDef = { 
			"key": elementKey, 
			"text": elementText, 
			"url": imageUrl,
			"lat": latitude,
			"long": longitude
			};
	
		if (this.elementsContent === undefined || this.elementsContent === "" || this.elementsContent === "<delete>"){
			this.elementsContent = "[]";
		}
		
		var elementsJson = JSON.parse(this.elementsContent);
		
		var alreadyFound = false;
		for (var i = 0; i < elementsJson.length ; i++){
			if (elementsJson[i].key == elementKey) {
				alreadyFound = true;
				break;
			}
		}
		
		if(!alreadyFound) {
			elementsJson.push(itemDef);
		}
	
		this.elementsContent = JSON.stringify(elementsJson);
	*}

	/**
	 * Moves the map to the given location by key
	 */
	void moveTo (
			/**key which schould be moved to*/String key) {*
		this.moveAction = this.moveAction + 1;
		this.moveTo = key
	*}
	
	/** returns the selected key */
	String getSelectedKey () {*
		return this.selectedKey;	
	*}
}
